<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.bremersee</groupId>
    <artifactId>common-service-parent</artifactId>
    <version>1.0.3</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <artifactId>dc-con-app</artifactId>
  <version>1.2.4-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>dc-con-app</name>
  <description>Domain Controller Connector Application</description>
  <url>https://github.com/bremersee/dc-con-app</url>

  <properties>
    <start-class>org.bremersee.dccon.Application</start-class>

    <dc-con-api-spring.version>1.2.0-SNAPSHOT</dc-con-api-spring.version>
    <common-base.version>1.2.2</common-base.version>
    <comparator.version>2.0.4-SNAPSHOT</comparator.version>

    <commons-io.version>2.5</commons-io.version>
    <ldaptive.version>1.2.4</ldaptive.version>
    <springfox.version>2.9.2</springfox.version>

    <!--suppress UnresolvedMavenProperty -->
    <debBaseName>
      dc-con_${project.version}-${maven.build.timestamp}+${scmBranch}+${buildNumber}_all
    </debBaseName>
    <debName>${debBaseName}.deb</debName>
    <debChangesName>${debBaseName}.changes</debChangesName>
  </properties>

  <scm>
    <connection>scm:git:ssh://git@github.com:bremersee/dc-con-app.git</connection>
    <developerConnection>
      scm:git:ssh://git@github.com:bremersee/dc-con-app.git
    </developerConnection>
    <url>https://github.com/bremersee/dc-con-app</url>
  </scm>

  <issueManagement>
    <url>https://github.com/bremersee/dc-con-app/issues</url>
    <system>GitHub Issues</system>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>bremersee-releases</id>
      <url>https://nexus.bremersee.org/repository/maven-releases</url>
    </repository>
    <snapshotRepository>
      <id>bremersee-snapshots</id>
      <url>https://nexus.bremersee.org/repository/maven-snapshots</url>
    </snapshotRepository>
    <site>
      <id>bremersee-sites</id>
      <url>
        dav:https://nexus.bremersee.org/repository/maven-sites/dc-con-app/${project.version}
      </url>
    </site>
  </distributionManagement>

  <dependencies>
    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>dc-con-api-spring</artifactId>
      <version>${dc-con-api-spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>common-base</artifactId>
      <version>${common-base.version}</version>
    </dependency>
    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>comparator</artifactId>
      <version>${comparator.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>org.ldaptive</groupId>
      <artifactId>ldaptive</artifactId>
      <version>${ldaptive.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.ldaptive</groupId>
      <artifactId>ldaptive-beans</artifactId>
      <version>${ldaptive.version}</version>
    </dependency>
    <dependency>
      <groupId>org.ldaptive</groupId>
      <artifactId>ldaptive-unboundid</artifactId>
      <version>${ldaptive.version}</version>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>${swagger-annotations.version}</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>${springfox.version}</version>
    </dependency>

    <!--
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
    </dependency>
    -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-oauth2-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-oauth2-resource-server</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-oauth2-jose</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.retry</groupId>
      <artifactId>spring-retry</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-sleuth</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-sleuth-zipkin</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-zipkin</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>dc-con</finalName>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>jdeb</artifactId>
          <groupId>org.vafer</groupId>
          <version>1.5</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>debian9</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <assembly-config>debian9.xml</assembly-config>
      </properties>
      <build>
        <finalName>dc-con</finalName>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <executable>true</executable>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
              <descriptors>
                <descriptor>${basedir}/src/assembly/debian9.xml</descriptor>
              </descriptors>
            </configuration>
            <executions>
              <execution>
                <id>debian9-archive</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>jdeb</artifactId>
            <groupId>org.vafer</groupId>
            <executions>
              <execution>
                <id>debian9-deb</id>
                <phase>package</phase>
                <goals>
                  <goal>jdeb</goal>
                </goals>
                <configuration>
                  <verbose>true</verbose>
                  <deb>${project.build.directory}/${debName}</deb>
                  <changesOut>${project.build.directory}/${debChangesName}</changesOut>
                  <controlDir>${basedir}/src/assembly/debian9/control</controlDir>
                  <dataSet>
                    <data>
                      <src>${project.build.directory}/dc-con-debian9.tar.gz</src>
                      <type>archive</type>
                      <mapper>
                        <type>perm</type>
                        <prefix>/</prefix>
                      </mapper>
                    </data>
                  </dataSet>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>deploy-to-repo-ubuntu-bionic</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <!--+
              | wagon-http only supports http method put
              | uploading to nexus apt works only with a workaround in haproxy
              +-->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>wagon-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>upload-to-ubuntu-bionic</id>
                <phase>deploy</phase>
                <goals>
                  <goal>upload-single</goal>
                </goals>
                <configuration>
                  <serverId>bremersee-apt</serverId>
                  <fromFile>${project.build.directory}/${debName}</fromFile>
                  <url>https://nexus.bremersee.org/repository/ubuntu-bionic</url>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>apt-get-on-dc</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>wagon-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install-on-dc</id>
                <phase>deploy</phase>
                <goals>
                  <goal>sshexec</goal>
                </goals>
                <configuration>
                  <serverId>bremersee-dc</serverId>
                  <url>scp://dc.eixe.bremersee.org/home/bremersee</url>
                  <commands>
                    <command>sudo -n /usr/bin/apt-get update</command>
                    <command>sudo -n /usr/bin/env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get
                      -yq install dc-con
                    </command>
                  </commands>
                  <displayCommandOutputs>true</displayCommandOutputs>
                  <failOnError>false</failOnError>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>apt-get-on-dc2</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>wagon-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install-on-dc2</id>
                <phase>deploy</phase>
                <goals>
                  <goal>sshexec</goal>
                </goals>
                <configuration>
                  <serverId>bremersee-dc</serverId>
                  <url>scp://dc2.eixe.bremersee.org/home/bremersee</url>
                  <commands>
                    <command>sudo -n /usr/bin/apt-get update</command>
                    <command>sudo -n /usr/bin/env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get
                      -yq install dc-con
                    </command>
                  </commands>
                  <displayCommandOutputs>true</displayCommandOutputs>
                  <failOnError>false</failOnError>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>copy-to-and-install-on-dc</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>wagon-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-to-dc</id>
                <phase>deploy</phase>
                <goals>
                  <goal>upload-single</goal>
                </goals>
                <configuration>
                  <serverId>bremersee-dc</serverId>
                  <url>scp://dc.eixe.bremersee.org/home/bremersee</url>
                  <fromFile>${project.build.directory}/${debName}</fromFile>
                  <toFile>dc-con.deb</toFile>
                </configuration>
              </execution>
              <execution>
                <id>dpkg-on-dc</id>
                <phase>deploy</phase>
                <goals>
                  <goal>sshexec</goal>
                </goals>
                <configuration>
                  <serverId>bremersee-dc</serverId>
                  <url>scp://dc.eixe.bremersee.org/home/bremersee</url>
                  <commands>
                    <command>sudo -n /usr/bin/dpkg -i /home/bremersee/dc-con.deb</command>
                    <command>rm /home/bremersee/dc-con.deb</command>
                  </commands>
                  <displayCommandOutputs>true</displayCommandOutputs>
                  <failOnError>true</failOnError>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>copy-to-and-install-on-dc2</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>wagon-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-to-dc2</id>
                <phase>deploy</phase>
                <goals>
                  <goal>upload-single</goal>
                </goals>
                <configuration>
                  <serverId>bremersee-dc</serverId>
                  <url>scp://dc2.eixe.bremersee.org/home/bremersee</url>
                  <fromFile>${project.build.directory}/${debName}</fromFile>
                  <toFile>dc-con.deb</toFile>
                </configuration>
              </execution>
              <execution>
                <id>dpkg-on-dc2</id>
                <phase>deploy</phase>
                <goals>
                  <goal>sshexec</goal>
                </goals>
                <configuration>
                  <serverId>bremersee-dc</serverId>
                  <url>scp://dc2.eixe.bremersee.org/home/bremersee</url>
                  <commands>
                    <command>sudo -n /usr/bin/dpkg -i /home/bremersee/dc-con.deb</command>
                    <command>rm /home/bremersee/dc-con.deb</command>
                  </commands>
                  <displayCommandOutputs>true</displayCommandOutputs>
                  <failOnError>true</failOnError>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
