bremersee:
  ldaptive:
    enabled: false
  exception-mapping:
    api-paths:
      - /api/**
    default-exception-mapping-config:
      include-stack-trace: true
      include-cause: true
      include-application-name: true
      include-exception-class-name: true
      include-handler: true
      include-path: true
  domain-controller:
    company-name: ${COMPANY_NAME:example.org}
    company-url: ${COMPANY_URL:http://example.org}
    group-base-dn: ${LDAP_GROUP_DN:cn=Groups,dc=example,dc=org}
    user-base-dn: ${LDAP_USER_DN:cn=Users,dc=example,dc=org}
    name-server-host: ${NAME_SERVER_HOST:ns.example.org}
    dns-zone-base-dn: ${LDAP_ZONE_DN:CN=MicrosoftDNS,DC=DomainDnsZones,DC=example,DC=org}
    dns-node-base-dn: DC={zoneName},${bremersee.domain-controller.dns-zone-base-dn}
    mail-with-credentials:
      sender: ${spring.mail.username:no-reply@example.org}
      login-url: http://localhost:4200/change-password
  thymeleaf:
    resolvers:
      - prefix: "classpath:mail/"
        suffix: ".html"
        resolvable-patterns:
          - "*"
        template-mode: HTML
  messages:
    default-locale: en
    fallback-to-system-locale: false
  actuator:
    auth:
      enable: auto
      enable-cors: true
  cors:
    enable: true
  auth:
    resource-server: auto
    path-matchers:
      - ant-pattern: "/v3/**"
        access-mode: permit_all
      - ant-pattern: "/webjars/**"
        access-mode: permit_all
      - ant-pattern: "/swagger-ui/**"
        access-mode: permit_all
      - ant-pattern: "/swagger-ui.html"
        access-mode: permit_all
    any-access-mode: authenticated

eureka:
  client:
    enabled: false

spring:
  application:
    name: ${APPLICATION_NAME:dc-con-app}
  sleuth:
    enabled: ${SLEUTH_ENABLED:false}
    sampler:
      probability: ${SLEUTH_PROBABILITY:1.0}
  zipkin:
    enabled: ${ZIPKIN_ENABLED:false}
    base-url: ${ZIPKIN_BASE_URL:http://localhost:9411/}
  cache:
    jcache:
      config: classpath:ehcache.xml
  cloud:
    config:
      enabled: ${CONFIG_CLIENT_ENABLED:false}
      uri: ${CONFIG_URI:https://configserver.example.org}
      username: ${CONFIG_USER:user}
      password: ${CONFIG_PASSWORD:changeit}
      fail-fast: ${CONFIG_CLIENT_FAIL_FAST:true}
      retry:
        initial-interval: ${CONFIG_RETRY_INIT_INTERVAL:3000}
        max-interval: ${CONFIG_RETRY_MAX_INTERVAL:4000}
        max-attempts: ${CONFIG_RETRY_MAX_ATTEMPTS:8}
        multiplier: ${CONFIG_RETRY_MULTIPLIER:1.1}

management:
  endpoints:
    web:
      exposure:
        include: "*"
      cors:
        allowed-headers: "*"
        allowed-methods: "*"
        allowed-origins: "*"
  endpoint:
    health:
      show-details: when_authorized
  health:
    mail:
      enabled: false

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${CONTEXT_PATH:/}

logging:
  level:
    ROOT: info
    com.netflix.eureka.registry: warn
    com.netflix.discovery.shared.resolver: warn
    org.springframework.cloud.configclient: warn

---

spring:
  config:
    activate:
      on-profile: jwt
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: https://openid.bremersee.org/auth/realms/omnis/protocol/openid-connect/certs

---

spring:
  config:
    activate:
      on-profile: in-memory

bremersee:
  auth:
    in-memory-users:
      - name: "admin"
        password: "admin"
        authorities:
          - "ROLE_LOCAL_USER"
          - "ROLE_ADMIN"
      - name: "actuator"
        password: "actuator"
        authorities:
          - "ROLE_ACTUATOR"
          - "ROLE_ACTUATOR_ADMIN"
      - name: "user"
        password: "user"
        authorities:
          - "ROLE_LOCAL_USER"

---

spring:
  config:
    activate:
      on-profile: ldap

bremersee:
  ldaptive:
    enabled: true
    ldap-url: ${LDAP_URL:ldaps://example.org:636}
    use-start-tls: ${LDAP_START_TLS:false}
    bind-dn: ${LDAP_BIND_DN:areader@example.org}
    bind-credentials: ${LDAP_BIND_PASSWORD:changeit}
    pooled: true
    min-pool-size: 3
    max-pool-size: 10
    validate-on-check-in: false
    validate-on-check-out: false
    validate-periodically: true
    search-validator:
      search-request:
        base-dn: ${LDAP_BASE_DN:dc=example,dc=org}
        search-filter:
          filter: ${LDAP_VALIDATION_FILTER:(cn=Administrator)}
        size-limit: 1
        search-scope: ONELEVEL
        return-attributes:
          - cn

---

spring:
  config:
    activate:
      on-profile: cli

---

spring:
  config:
    activate:
      on-profile: debian

logging:
  file:
    name: /var/log/dc-con/dc-con.log
  logback:
    rollingpolicy:
      max-history: 25

server:
  tomcat:
    accesslog:
      enabled: true
      directory: /var/log/dc-con
      prefix: access_log

